<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a8" title="">
  <file path="app\controllers\homeController.php" hash="11b8eecef20077b93ee30e5c4778a57b" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Default">
      <extends/>
      <name>Home</name>
      <full_name>\Home</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="10" package="Default">
        <name>index</name>
        <full_name>index</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>intro</name>
        <full_name>intro</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\controllers\homeController.php</error>
      <error line="8" code="50000">No DocBlock was found for \Home</error>
      <error line="10" code="50010">No DocBlock was found for method index()</error>
      <error line="14" code="50010">No DocBlock was found for method intro()</error>
    </parse_markers>
  </file>
  <file path="app\controllers\indexController.php" hash="3ea763424174995ff3421a00e0f86538" package="Default">
    <namespace-alias name="Object">app\sys\util\Object</namespace-alias>
    <namespace-alias name="Controller">app\sys\mvc\Controller</namespace-alias>
    <namespace-alias name="HomeModel">app\models\HomeModel</namespace-alias>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends>\app\sys\mvc\Controller</extends>
      <name>Index</name>
      <full_name>\Index</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>indexHome</name>
        <full_name>indexHome</full_name>
        <docblock line="14">
          <description><![CDATA[Conteúdo da página home do site.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\controllers\indexController.php</error>
      <error line="12" code="50000">No DocBlock was found for \Index</error>
    </parse_markers>
  </file>
  <file path="app\models\homeModel.php" hash="d728b30319cd2881a7712f40c0d0f757" package="Default">
    <namespace-alias name="Model">app\sys\mvc\Model</namespace-alias>
    <namespace-alias name="Cliente">app\models\tables\Cliente</namespace-alias>
    <namespace-alias name="IndicaAmigo">app\models\tables\IndicaAmigo</namespace-alias>
    <namespace-alias name="ORM">app\sys\db\ORM</namespace-alias>
    <class final="false" abstract="false" namespace="app\models" line="14" package="Default">
      <extends>\app\sys\mvc\Model</extends>
      <name>HomeModel</name>
      <full_name>\app\models\HomeModel</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\models" line="15" package="Default">
        <name>init</name>
        <full_name>init</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\models\homeModel.php</error>
      <error line="14" code="50000">No DocBlock was found for \app\models\HomeModel</error>
      <error line="15" code="50010">No DocBlock was found for method init()</error>
    </parse_markers>
  </file>
  <file path="app\models\tables\Cliente.php" hash="921f93f05055ee71f7e305cb7b2fddb6" package="Default">
    <namespace-alias name="ORM">app\sys\db\ORM</namespace-alias>
    <class final="false" abstract="false" namespace="app\models\tables" line="19" package="Default">
      <extends>\app\sys\db\ORM</extends>
      <name>Cliente</name>
      <full_name>\app\models\tables\Cliente</full_name>
      <docblock line="6">
        <description><![CDATA[Representa uma entidade da tabela SPRO_CLIENTE]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="6" name="method" description="" type="void" method_name="setNomePrincipal">
          <type by_reference="false">void</type>
          <argument>
            <name>$nome</name>
            <default/>
            <type>string</type>
          </argument>
        </tag>
        <tag line="6" name="property" description="ID_CLIENTE" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="6" name="property" description="HASH" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="NOME_PRINCIPAL" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="EMAIL" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="LOGIN" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="SENHA" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="PF_PJ" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="DATA_REGISTRO" type="\app\models\tables\datetime" variable="">
          <type by_reference="false">\app\models\tables\datetime</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\models\tables" line="21" package="Default">
        <name>joinUf</name>
        <full_name>joinUf</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\models\tables\Cliente.php</error>
      <error line="21" code="50010">No DocBlock was found for method joinUf()</error>
    </parse_markers>
  </file>
  <file path="app\models\tables\IndicaAmigo.php" hash="5c482e7ea716eb76e74800548e4690c1" package="Default">
    <namespace-alias name="Crud">app\sys\db\Crud</namespace-alias>
    <class final="false" abstract="false" namespace="app\models\tables" line="22" package="Default">
      <extends>\app\sys\db\Crud</extends>
      <name>IndicaAmigo</name>
      <full_name>\app\models\tables\IndicaAmigo</full_name>
      <docblock line="6">
        <description><![CDATA[Representa uma entidade da tabela SPRO_INDICA_AMIGO]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="6" name="property" description="ID_INDICA_AMIGO" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="6" name="property" description="ID_REMETENTE" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="6" name="property" description="VALIDADE_INDICACAO" type="\app\models\tables\date" variable="">
          <type by_reference="false">\app\models\tables\date</type>
        </tag>
        <tag line="6" name="property" description="NOME" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="EMAIL" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="MSG" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="BONUS_REMETENTE" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="6" name="property" description="DATA_BONUS_REMETENTE" type="\app\models\tables\datetime" variable="">
          <type by_reference="false">\app\models\tables\datetime</type>
        </tag>
        <tag line="6" name="property" description="BONUS_DESTINATARIO" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="6" name="property" description="DATA_BONUS_DESTINATARIO" type="\app\models\tables\datetime" variable="">
          <type by_reference="false">\app\models\tables\datetime</type>
        </tag>
        <tag line="6" name="proerty" description="datetime DATA_REGISTRO"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\models\tables\IndicaAmigo.php</error>
    </parse_markers>
  </file>
  <file path="app\models\tables\Uf.php" hash="a54e590d85758d2f4352460ebbf927b8" package="Default">
    <namespace-alias name="Crud">app\sys\db\Crud</namespace-alias>
    <class final="false" abstract="false" namespace="app\models\tables" line="7" package="Default">
      <extends>\app\sys\db\Crud</extends>
      <name>Uf</name>
      <full_name>\app\models\tables\Uf</full_name>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\models\tables\Uf.php</error>
      <error line="7" code="50000">No DocBlock was found for \app\models\tables\Uf</error>
    </parse_markers>
  </file>
  <file path="app\sys\db\Conn.php" hash="cd0cd69f366bea10fbcfcc93e8331626" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="api\db">
      <extends/>
      <name>Conn</name>
      <full_name>\Conn</full_name>
      <docblock line="3">
        <description><![CDATA[Classe responsável por guardar/iniciar as configurações de conexão com mySql.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="api\db"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="10" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA['superpro']]></default>
      </property>
      <property final="false" static="false" visibility="private" line="11" namespace="global" package="Default">
        <name>$server</name>
        <default><![CDATA['localhost']]></default>
      </property>
      <property final="false" static="false" visibility="private" line="12" namespace="global" package="Default">
        <name>$passwd</name>
        <default><![CDATA['']]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="21" package="api\db">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="14">
          <description><![CDATA[Inicia a conexão com o DB (utiliza o pattern Singleton).]]></description>
          <long-description><![CDATA[<p>Exemplo:</p>

<pre><code> Conn::init();
</code></pre>]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\db\Conn.php</error>
      <error line="10" code="50018">No DocBlock was found for property $user</error>
      <error line="11" code="50018">No DocBlock was found for property $server</error>
      <error line="12" code="50018">No DocBlock was found for property $passwd</error>
    </parse_markers>
  </file>
  <file path="app\sys\db\meekrodb_2_0.php" hash="5806da0e1aa5dcdc55504f87b7c1a749" package="Default">
    <function namespace="global" line="812" package="Default">
      <name>meekrodb_error_handler</name>
      <full_name>\meekrodb_error_handler</full_name>
      <argument line="812">
        <name>$params</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="828" package="Default">
      <name>meekrodb_debugmode_handler</name>
      <full_name>\meekrodb_debugmode_handler</full_name>
      <argument line="828">
        <name>$params</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="29" package="api\db">
      <extends/>
      <name>DB</name>
      <full_name>\DB</full_name>
      <docblock line="3">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="filesource" description="meekrodb ({@link http://www.meekrodb.com}).&#13;&#10;Biblioteca de abstração mySql utilizada no ORM do mvc."/>
        <tag line="3" name="package" description="api\db"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="31" namespace="global" package="Default">
        <name>$dbName</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="32" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="33" namespace="global" package="Default">
        <name>$password</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="34" namespace="global" package="Default">
        <name>$host</name>
        <default><![CDATA['localhost']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="35" namespace="global" package="Default">
        <name>$port</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="36" namespace="global" package="Default">
        <name>$encoding</name>
        <default><![CDATA['latin1']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="39" namespace="global" package="Default">
        <name>$queryMode</name>
        <default><![CDATA['queryAllRows']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="40" namespace="global" package="Default">
        <name>$param_char</name>
        <default><![CDATA['%']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="41" namespace="global" package="Default">
        <name>$success_handler</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="42" namespace="global" package="Default">
        <name>$error_handler</name>
        <default><![CDATA[true]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="43" namespace="global" package="Default">
        <name>$throw_exception_on_error</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="44" namespace="global" package="Default">
        <name>$nonsql_error_handler</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="45" namespace="global" package="Default">
        <name>$throw_exception_on_nonsql_error</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="true" visibility="protected" line="48" namespace="global" package="Default">
        <name>$mdb</name>
        <default><![CDATA[null]]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="api\db">
        <name>getMDB</name>
        <full_name>getMDB</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="api\db">
        <name>query</name>
        <full_name>query</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="69" package="api\db">
        <name>quickPrepare</name>
        <full_name>quickPrepare</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="70" package="api\db">
        <name>queryFirstRow</name>
        <full_name>queryFirstRow</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="71" package="api\db">
        <name>queryOneRow</name>
        <full_name>queryOneRow</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="api\db">
        <name>queryFirstList</name>
        <full_name>queryFirstList</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="api\db">
        <name>queryOneList</name>
        <full_name>queryOneList</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="api\db">
        <name>queryFirstColumn</name>
        <full_name>queryFirstColumn</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="75" package="api\db">
        <name>queryOneColumn</name>
        <full_name>queryOneColumn</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="76" package="api\db">
        <name>queryFirstField</name>
        <full_name>queryFirstField</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="77" package="api\db">
        <name>queryOneField</name>
        <full_name>queryOneField</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="78" package="api\db">
        <name>queryRaw</name>
        <full_name>queryRaw</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="api\db">
        <name>queryNull</name>
        <full_name>queryNull</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="80" package="api\db">
        <name>queryBuf</name>
        <full_name>queryBuf</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="api\db">
        <name>queryUnbuf</name>
        <full_name>queryUnbuf</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="83" package="api\db">
        <name>insert</name>
        <full_name>insert</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="84" package="api\db">
        <name>insertIgnore</name>
        <full_name>insertIgnore</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="85" package="api\db">
        <name>insertUpdate</name>
        <full_name>insertUpdate</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="86" package="api\db">
        <name>replace</name>
        <full_name>replace</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="api\db">
        <name>update</name>
        <full_name>update</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="88" package="api\db">
        <name>delete</name>
        <full_name>delete</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="api\db">
        <name>insertId</name>
        <full_name>insertId</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="api\db">
        <name>count</name>
        <full_name>count</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="api\db">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="94" package="api\db">
        <name>useDB</name>
        <full_name>useDB</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="95" package="api\db">
        <name>startTransaction</name>
        <full_name>startTransaction</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="96" package="api\db">
        <name>commit</name>
        <full_name>commit</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="97" package="api\db">
        <name>rollback</name>
        <full_name>rollback</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="98" package="api\db">
        <name>tableList</name>
        <full_name>tableList</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="api\db">
        <name>columnList</name>
        <full_name>columnList</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="101" package="api\db">
        <name>sqlEval</name>
        <full_name>sqlEval</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="102" package="api\db">
        <name>nonSQLError</name>
        <full_name>nonSQLError</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="104" package="api\db">
        <name>debugMode</name>
        <full_name>debugMode</full_name>
        <argument line="104">
          <name>$handler</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="111" package="Default">
      <extends/>
      <name>MeekroDB</name>
      <full_name>\MeekroDB</full_name>
      <property final="false" static="false" visibility="public" line="113" namespace="global" package="Default">
        <name>$dbName</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="114" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="115" namespace="global" package="Default">
        <name>$password</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="116" namespace="global" package="Default">
        <name>$host</name>
        <default><![CDATA['localhost']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="117" namespace="global" package="Default">
        <name>$port</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="118" namespace="global" package="Default">
        <name>$encoding</name>
        <default><![CDATA['latin1']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="121" namespace="global" package="Default">
        <name>$queryMode</name>
        <default><![CDATA['queryAllRows']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="122" namespace="global" package="Default">
        <name>$param_char</name>
        <default><![CDATA['%']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="123" namespace="global" package="Default">
        <name>$success_handler</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="124" namespace="global" package="Default">
        <name>$error_handler</name>
        <default><![CDATA[true]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="125" namespace="global" package="Default">
        <name>$throw_exception_on_error</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="126" namespace="global" package="Default">
        <name>$nonsql_error_handler</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="127" namespace="global" package="Default">
        <name>$throw_exception_on_nonsql_error</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="130" namespace="global" package="Default">
        <name>$internal_mysql</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="131" namespace="global" package="Default">
        <name>$insert_id</name>
        <default><![CDATA[0]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="132" namespace="global" package="Default">
        <name>$num_rows</name>
        <default><![CDATA[0]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="133" namespace="global" package="Default">
        <name>$affected_rows</name>
        <default><![CDATA[0]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="134" namespace="global" package="Default">
        <name>$queryResult</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="135" namespace="global" package="Default">
        <name>$queryResultType</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="136" namespace="global" package="Default">
        <name>$old_db</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="137" namespace="global" package="Default">
        <name>$current_db</name>
        <default><![CDATA[null]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="140">
          <name>$host</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$user</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$password</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$dbName</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$port</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$encoding</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Default">
        <name>get</name>
        <full_name>get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>nonSQLError</name>
        <full_name>nonSQLError</full_name>
        <argument line="175">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="Default">
        <name>debugMode</name>
        <full_name>debugMode</full_name>
        <argument line="189">
          <name>$handler</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Default">
        <name>count</name>
        <full_name>count</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="Default">
        <name>numRows</name>
        <full_name>numRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Default">
        <name>useDB</name>
        <full_name>useDB</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>setDB</name>
        <full_name>setDB</full_name>
        <argument line="199">
          <name>$dbName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Default">
        <name>startTransaction</name>
        <full_name>startTransaction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Default">
        <name>commit</name>
        <full_name>commit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Default">
        <name>rollback</name>
        <full_name>rollback</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Default">
        <name>escape</name>
        <full_name>escape</full_name>
        <argument line="219">
          <name>$str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Default">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <argument line="224">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="238" package="Default">
        <name>formatTableName</name>
        <full_name>formatTableName</full_name>
        <argument line="238">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="250" package="Default">
        <name>prependCall</name>
        <full_name>prependCall</full_name>
        <argument line="250">
          <name>$function</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$prepend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="255" package="Default">
        <name>wrapStr</name>
        <full_name>wrapStr</full_name>
        <argument line="255">
          <name>$strOrArray</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="255">
          <name>$wrapChar</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="255">
          <name>$escape</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Default">
        <name>freeResult</name>
        <full_name>freeResult</full_name>
        <argument line="269">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="Default">
        <name>update</name>
        <full_name>update</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="Default">
        <name>insertOrReplace</name>
        <full_name>insertOrReplace</full_name>
        <argument line="291">
          <name>$which</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$datas</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <argument line="336">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="336">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="Default">
        <name>insertIgnore</name>
        <full_name>insertIgnore</full_name>
        <argument line="337">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="337">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <argument line="338">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="338">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="Default">
        <name>insertUpdate</name>
        <full_name>insertUpdate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="368" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Default">
        <name>sqleval</name>
        <full_name>sqleval</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="Default">
        <name>columnList</name>
        <full_name>columnList</full_name>
        <argument line="383">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="387" package="Default">
        <name>tableList</name>
        <full_name>tableList</full_name>
        <argument line="387">
          <name>$db</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="394" package="Default">
        <name>parseQueryParamsOld</name>
        <full_name>parseQueryParamsOld</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="414" package="Default">
        <name>parseQueryParamsNew</name>
        <full_name>parseQueryParamsNew</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="Default">
        <name>parseQueryParams</name>
        <full_name>parseQueryParams</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="500" package="Default">
        <name>quickPrepare</name>
        <full_name>quickPrepare</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="502" package="Default">
        <name>query</name>
        <full_name>query</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="Default">
        <name>queryNull</name>
        <full_name>queryNull</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="Default">
        <name>queryRaw</name>
        <full_name>queryRaw</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="513" package="Default">
        <name>queryBuf</name>
        <full_name>queryBuf</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="514" package="Default">
        <name>queryUnbuf</name>
        <full_name>queryUnbuf</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="516" package="Default">
        <name>queryHelper</name>
        <full_name>queryHelper</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="575" package="Default">
        <name>queryAllRows</name>
        <full_name>queryAllRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="586" package="Default">
        <name>queryAllArrays</name>
        <full_name>queryAllArrays</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="597" package="Default">
        <name>queryOneList</name>
        <full_name>queryOneList</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="598" package="Default">
        <name>queryFirstList</name>
        <full_name>queryFirstList</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="606" package="Default">
        <name>queryOneRow</name>
        <full_name>queryOneRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="607" package="Default">
        <name>queryFirstRow</name>
        <full_name>queryFirstRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="616" package="Default">
        <name>queryFirstColumn</name>
        <full_name>queryFirstColumn</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="630" package="Default">
        <name>queryOneColumn</name>
        <full_name>queryOneColumn</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="649" package="Default">
        <name>queryFirstField</name>
        <full_name>queryFirstField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="656" package="Default">
        <name>queryOneField</name>
        <full_name>queryOneField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="671" package="Default">
        <name>checkError</name>
        <full_name>checkError</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="682" package="Default">
        <name>fetchRow</name>
        <full_name>fetchRow</full_name>
        <argument line="682">
          <name>$result</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="688" package="Default">
        <name>fetchAllRows</name>
        <full_name>fetchAllRows</full_name>
        <argument line="688">
          <name>$result</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="Default">
        <name>fetchArray</name>
        <full_name>fetchArray</full_name>
        <argument line="696">
          <name>$result</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="702" package="Default">
        <name>fetchAllArrays</name>
        <full_name>fetchAllArrays</full_name>
        <argument line="702">
          <name>$result</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="713" package="Default">
      <extends/>
      <name>WhereClause</name>
      <full_name>\WhereClause</full_name>
      <property final="false" static="false" visibility="public" line="714" namespace="global" package="Default">
        <name>$type</name>
        <default><![CDATA['and']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="715" namespace="global" package="Default">
        <name>$negate</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="716" namespace="global" package="Default">
        <name>$clauses</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="717" namespace="global" package="Default">
        <name>$mdb</name>
        <default><![CDATA[null]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="719" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="719">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="719">
          <name>$mdb</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="729" package="Default">
        <name>add</name>
        <full_name>add</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="741" package="Default">
        <name>negateLast</name>
        <full_name>negateLast</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="752" package="Default">
        <name>negate</name>
        <full_name>negate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="756" package="Default">
        <name>addClause</name>
        <full_name>addClause</full_name>
        <argument line="756">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="762" package="Default">
        <name>count</name>
        <full_name>count</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="766" package="Default">
        <name>text</name>
        <full_name>text</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="784" package="Default">
      <extends/>
      <name>DBTransaction</name>
      <full_name>\DBTransaction</full_name>
      <property final="false" static="false" visibility="private" line="785" namespace="global" package="Default">
        <name>$committed</name>
        <default><![CDATA[false]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="787" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="790" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="793" package="Default">
        <name>commit</name>
        <full_name>commit</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="801" package="Default">
      <extends>\Exception</extends>
      <name>MeekroDBException</name>
      <full_name>\MeekroDBException</full_name>
      <property final="false" static="false" visibility="protected" line="802" namespace="global" package="Default">
        <name>$query</name>
        <default><![CDATA['']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="804" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="804">
          <name>$message</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="804">
          <name>$query</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="809" package="Default">
        <name>getQuery</name>
        <full_name>getQuery</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="837" package="Default">
      <extends/>
      <name>MeekroDBEval</name>
      <full_name>\MeekroDBEval</full_name>
      <property final="false" static="false" visibility="public" line="838" namespace="global" package="Default">
        <name>$text</name>
        <default><![CDATA['']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="840" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="840">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\db\meekrodb_2_0.php</error>
      <error line="812" code="50009">No DocBlock was found for function \meekrodb_error_handler()</error>
      <error line="828" code="50009">No DocBlock was found for function \meekrodb_debugmode_handler()</error>
      <critical line="3" code="50005">No short description for class \DB</critical>
      <error line="31" code="50018">No DocBlock was found for property $dbName</error>
      <error line="32" code="50018">No DocBlock was found for property $user</error>
      <error line="33" code="50018">No DocBlock was found for property $password</error>
      <error line="34" code="50018">No DocBlock was found for property $host</error>
      <error line="35" code="50018">No DocBlock was found for property $port</error>
      <error line="36" code="50018">No DocBlock was found for property $encoding</error>
      <error line="39" code="50018">No DocBlock was found for property $queryMode</error>
      <error line="40" code="50018">No DocBlock was found for property $param_char</error>
      <error line="41" code="50018">No DocBlock was found for property $success_handler</error>
      <error line="42" code="50018">No DocBlock was found for property $error_handler</error>
      <error line="43" code="50018">No DocBlock was found for property $throw_exception_on_error</error>
      <error line="44" code="50018">No DocBlock was found for property $nonsql_error_handler</error>
      <error line="45" code="50018">No DocBlock was found for property $throw_exception_on_nonsql_error</error>
      <error line="48" code="50018">No DocBlock was found for property $mdb</error>
      <error line="50" code="50010">No DocBlock was found for method getMDB()</error>
      <error line="68" code="50010">No DocBlock was found for method query()</error>
      <error line="69" code="50010">No DocBlock was found for method quickPrepare()</error>
      <error line="70" code="50010">No DocBlock was found for method queryFirstRow()</error>
      <error line="71" code="50010">No DocBlock was found for method queryOneRow()</error>
      <error line="72" code="50010">No DocBlock was found for method queryFirstList()</error>
      <error line="73" code="50010">No DocBlock was found for method queryOneList()</error>
      <error line="74" code="50010">No DocBlock was found for method queryFirstColumn()</error>
      <error line="75" code="50010">No DocBlock was found for method queryOneColumn()</error>
      <error line="76" code="50010">No DocBlock was found for method queryFirstField()</error>
      <error line="77" code="50010">No DocBlock was found for method queryOneField()</error>
      <error line="78" code="50010">No DocBlock was found for method queryRaw()</error>
      <error line="79" code="50010">No DocBlock was found for method queryNull()</error>
      <error line="80" code="50010">No DocBlock was found for method queryBuf()</error>
      <error line="81" code="50010">No DocBlock was found for method queryUnbuf()</error>
      <error line="83" code="50010">No DocBlock was found for method insert()</error>
      <error line="84" code="50010">No DocBlock was found for method insertIgnore()</error>
      <error line="85" code="50010">No DocBlock was found for method insertUpdate()</error>
      <error line="86" code="50010">No DocBlock was found for method replace()</error>
      <error line="87" code="50010">No DocBlock was found for method update()</error>
      <error line="88" code="50010">No DocBlock was found for method delete()</error>
      <error line="90" code="50010">No DocBlock was found for method insertId()</error>
      <error line="91" code="50010">No DocBlock was found for method count()</error>
      <error line="92" code="50010">No DocBlock was found for method affectedRows()</error>
      <error line="94" code="50010">No DocBlock was found for method useDB()</error>
      <error line="95" code="50010">No DocBlock was found for method startTransaction()</error>
      <error line="96" code="50010">No DocBlock was found for method commit()</error>
      <error line="97" code="50010">No DocBlock was found for method rollback()</error>
      <error line="98" code="50010">No DocBlock was found for method tableList()</error>
      <error line="99" code="50010">No DocBlock was found for method columnList()</error>
      <error line="101" code="50010">No DocBlock was found for method sqlEval()</error>
      <error line="102" code="50010">No DocBlock was found for method nonSQLError()</error>
      <error line="104" code="50010">No DocBlock was found for method debugMode()</error>
      <error line="111" code="50000">No DocBlock was found for \MeekroDB</error>
      <error line="113" code="50018">No DocBlock was found for property $dbName</error>
      <error line="114" code="50018">No DocBlock was found for property $user</error>
      <error line="115" code="50018">No DocBlock was found for property $password</error>
      <error line="116" code="50018">No DocBlock was found for property $host</error>
      <error line="117" code="50018">No DocBlock was found for property $port</error>
      <error line="118" code="50018">No DocBlock was found for property $encoding</error>
      <error line="121" code="50018">No DocBlock was found for property $queryMode</error>
      <error line="122" code="50018">No DocBlock was found for property $param_char</error>
      <error line="123" code="50018">No DocBlock was found for property $success_handler</error>
      <error line="124" code="50018">No DocBlock was found for property $error_handler</error>
      <error line="125" code="50018">No DocBlock was found for property $throw_exception_on_error</error>
      <error line="126" code="50018">No DocBlock was found for property $nonsql_error_handler</error>
      <error line="127" code="50018">No DocBlock was found for property $throw_exception_on_nonsql_error</error>
      <error line="130" code="50018">No DocBlock was found for property $internal_mysql</error>
      <error line="131" code="50018">No DocBlock was found for property $insert_id</error>
      <error line="132" code="50018">No DocBlock was found for property $num_rows</error>
      <error line="133" code="50018">No DocBlock was found for property $affected_rows</error>
      <error line="134" code="50018">No DocBlock was found for property $queryResult</error>
      <error line="135" code="50018">No DocBlock was found for property $queryResultType</error>
      <error line="136" code="50018">No DocBlock was found for property $old_db</error>
      <error line="137" code="50018">No DocBlock was found for property $current_db</error>
      <error line="140" code="50010">No DocBlock was found for method __construct()</error>
      <error line="156" code="50010">No DocBlock was found for method get()</error>
      <error line="175" code="50010">No DocBlock was found for method nonSQLError()</error>
      <error line="189" code="50010">No DocBlock was found for method debugMode()</error>
      <error line="193" code="50010">No DocBlock was found for method insertId()</error>
      <error line="194" code="50010">No DocBlock was found for method affectedRows()</error>
      <error line="195" code="50010">No DocBlock was found for method count()</error>
      <error line="196" code="50010">No DocBlock was found for method numRows()</error>
      <error line="198" code="50010">No DocBlock was found for method useDB()</error>
      <error line="199" code="50010">No DocBlock was found for method setDB()</error>
      <error line="207" code="50010">No DocBlock was found for method startTransaction()</error>
      <error line="211" code="50010">No DocBlock was found for method commit()</error>
      <error line="215" code="50010">No DocBlock was found for method rollback()</error>
      <error line="219" code="50010">No DocBlock was found for method escape()</error>
      <error line="224" code="50010">No DocBlock was found for method sanitize()</error>
      <error line="238" code="50010">No DocBlock was found for method formatTableName()</error>
      <error line="250" code="50010">No DocBlock was found for method prependCall()</error>
      <error line="255" code="50010">No DocBlock was found for method wrapStr()</error>
      <error line="269" code="50010">No DocBlock was found for method freeResult()</error>
      <error line="274" code="50010">No DocBlock was found for method update()</error>
      <error line="291" code="50010">No DocBlock was found for method insertOrReplace()</error>
      <error line="336" code="50010">No DocBlock was found for method insert()</error>
      <error line="337" code="50010">No DocBlock was found for method insertIgnore()</error>
      <error line="338" code="50010">No DocBlock was found for method replace()</error>
      <error line="340" code="50010">No DocBlock was found for method insertUpdate()</error>
      <error line="368" code="50010">No DocBlock was found for method delete()</error>
      <error line="377" code="50010">No DocBlock was found for method sqleval()</error>
      <error line="383" code="50010">No DocBlock was found for method columnList()</error>
      <error line="387" code="50010">No DocBlock was found for method tableList()</error>
      <error line="394" code="50010">No DocBlock was found for method parseQueryParamsOld()</error>
      <error line="414" code="50010">No DocBlock was found for method parseQueryParamsNew()</error>
      <error line="490" code="50010">No DocBlock was found for method parseQueryParams()</error>
      <error line="500" code="50010">No DocBlock was found for method quickPrepare()</error>
      <error line="502" code="50010">No DocBlock was found for method query()</error>
      <error line="511" code="50010">No DocBlock was found for method queryNull()</error>
      <error line="512" code="50010">No DocBlock was found for method queryRaw()</error>
      <error line="513" code="50010">No DocBlock was found for method queryBuf()</error>
      <error line="514" code="50010">No DocBlock was found for method queryUnbuf()</error>
      <error line="516" code="50010">No DocBlock was found for method queryHelper()</error>
      <error line="575" code="50010">No DocBlock was found for method queryAllRows()</error>
      <error line="586" code="50010">No DocBlock was found for method queryAllArrays()</error>
      <error line="597" code="50010">No DocBlock was found for method queryOneList()</error>
      <error line="598" code="50010">No DocBlock was found for method queryFirstList()</error>
      <error line="606" code="50010">No DocBlock was found for method queryOneRow()</error>
      <error line="607" code="50010">No DocBlock was found for method queryFirstRow()</error>
      <error line="616" code="50010">No DocBlock was found for method queryFirstColumn()</error>
      <error line="630" code="50010">No DocBlock was found for method queryOneColumn()</error>
      <error line="649" code="50010">No DocBlock was found for method queryFirstField()</error>
      <error line="656" code="50010">No DocBlock was found for method queryOneField()</error>
      <error line="671" code="50010">No DocBlock was found for method checkError()</error>
      <error line="682" code="50010">No DocBlock was found for method fetchRow()</error>
      <error line="688" code="50010">No DocBlock was found for method fetchAllRows()</error>
      <error line="696" code="50010">No DocBlock was found for method fetchArray()</error>
      <error line="702" code="50010">No DocBlock was found for method fetchAllArrays()</error>
      <error line="713" code="50000">No DocBlock was found for \WhereClause</error>
      <error line="714" code="50018">No DocBlock was found for property $type</error>
      <error line="715" code="50018">No DocBlock was found for property $negate</error>
      <error line="716" code="50018">No DocBlock was found for property $clauses</error>
      <error line="717" code="50018">No DocBlock was found for property $mdb</error>
      <error line="719" code="50010">No DocBlock was found for method __construct()</error>
      <error line="729" code="50010">No DocBlock was found for method add()</error>
      <error line="741" code="50010">No DocBlock was found for method negateLast()</error>
      <error line="752" code="50010">No DocBlock was found for method negate()</error>
      <error line="756" code="50010">No DocBlock was found for method addClause()</error>
      <error line="762" code="50010">No DocBlock was found for method count()</error>
      <error line="766" code="50010">No DocBlock was found for method text()</error>
      <error line="784" code="50000">No DocBlock was found for \DBTransaction</error>
      <error line="785" code="50018">No DocBlock was found for property $committed</error>
      <error line="787" code="50010">No DocBlock was found for method __construct()</error>
      <error line="790" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="793" code="50010">No DocBlock was found for method commit()</error>
      <error line="801" code="50000">No DocBlock was found for \MeekroDBException</error>
      <error line="802" code="50018">No DocBlock was found for property $query</error>
      <error line="804" code="50010">No DocBlock was found for method __construct()</error>
      <error line="809" code="50010">No DocBlock was found for method getQuery()</error>
      <error line="837" code="50000">No DocBlock was found for \MeekroDBEval</error>
      <error line="838" code="50018">No DocBlock was found for property $text</error>
      <error line="840" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="app\sys\db\ORM.php" hash="3df5e282d433b407ff3416561a451368" package="Default">
    <namespace-alias name="Cache">app\sys\util\Cache</namespace-alias>
    <namespace-alias name="Request">app\sys\util\Request</namespace-alias>
    <namespace-alias name="Dic">app\sys\util\Dic</namespace-alias>
    <class final="false" abstract="false" namespace="app\sys\db" line="29" package="api\db">
      <extends/>
      <name>ORM</name>
      <full_name>\app\sys\db\ORM</full_name>
      <docblock line="8">
        <description><![CDATA[Classe de ORM (Mapeamento objeto relacional) para mySql.]]></description>
        <long-description><![CDATA[<p>A biblioteca utilizada para dar suporte à montagem e execução do SQL é a
meekrodb ({@link http://www.meekrodb.com}).
Cada tabela deve ter uma classe filha de ORM.php. Exemplo:
class Cliente extends ORM {
     ...
}</p>

<p>Por padrão, todas as tabelas possuem seu nome em caixa alta e contém um prefixo.
Por exemplo: SPRO_CLIENTE, SPRO_CREDITO_CONSOLIDADO etc.
O nome da classe que repsenta a tabela deve ser formado por inicial maiúscula
e as demais letras minúsuculas, porém sem prefixo (veja a propriedade $prefixoTable).</p>

<p>Nomes compostos devem ser intercalados com inicial maiúscula em cada palavra.
Exemplo: <b>SPRO_CLIENTE</b> será <b>Cliente.php</b>, <b>SPRO_CREDITO_CONSOLIDADO</b> será <b>CreditoConsolidado.php</b>.</p>]]></long-description>
        <tag line="8" name="author" description="Claudio Rubens Silva Filho &lt;claudio@supervip.com.br&gt;"/>
        <tag line="8" name="package" description="api\db"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39" namespace="app\sys\db" package="Default">
        <name>$arrColumns</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[Método que retorna o nome da tabela do DB composto de prefixo e em caixa alta.]]></description>
          <long-description><![CDATA[<p>O nome da tabela formado pelo nome da classe usando o
caracter "_" como seprador das palavras iniciadas em letra maiúscula.
Exemplo: CampanhaIndicaAmigo, ficaria CAMPANHA_INDICA_AMIGO.</p>]]></long-description>
          <tag line="31" name="param" description="Nome da classe" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="app\sys\db" package="Default">
        <name>$prefixoTable</name>
        <default><![CDATA['SPRO_']]></default>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="app\sys\db" package="Default">
        <name>$arrKey</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="app\sys\db" package="Default">
        <name>$arrUnique</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="app\sys\db" package="Default">
        <name>$colAutoNum</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="app\sys\db" package="Default">
        <name>$tableName</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="app\sys\db" package="Default">
        <name>$arrCols</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="app\sys\db" package="Default">
        <name>$arrParams</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="app\sys\db" package="Default">
        <name>$id</name>
        <default><![CDATA[0]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="app\sys\db" package="Default">
        <name>$row</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="app\sys\db" package="Default">
        <name>$where</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="app\sys\db" package="Default">
        <name>$alias</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="app\sys\db" package="Default">
        <name>$orderBy</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="app\sys\db" package="Default">
        <name>$limit</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="true" visibility="protected" line="53" namespace="app\sys\db" package="Default">
        <name>$results</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="app\sys\db" package="Default">
        <name>$joinWhere</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="app\sys\db" package="Default">
        <name>$arrObjJoin</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="app\sys\db" package="Default">
        <name>$fieldsJoin</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="true" visibility="private" line="57" namespace="app\sys\db" package="Default">
        <name>$debug</name>
        <default><![CDATA[FALSE]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="71" package="api\db">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description><![CDATA[Construtor da classe.]]></description>
          <long-description><![CDATA[<p>Para iniciar um objeto localizando o registro pelo seu ID:</p>

<pre><code> $objCliente = new Cliente(10);//Carrega os dados do registro cujo ID = 10
 echo $objCliente->NOME;//Imprime o campo NOME do registro atual.
</code></pre>]]></long-description>
          <tag line="60" name="param" description="Opcional." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$id</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="app\sys\db" line="83" package="api\db">
        <name>debugOn</name>
        <full_name>debugOn</full_name>
        <docblock line="76">
          <description><![CDATA[Ativa a opção de debug (IMPORTANTE: não execute essa opção em ambiente de produção).]]></description>
          <long-description><![CDATA[<p>Este recurso é útil para localizar possíveis problemas em consultas SQL.
Ao ativá-la as consultas SQL serão impressas na tela.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="app\sys\db" line="90" package="api\db">
        <name>debugOff</name>
        <full_name>debugOff</full_name>
        <docblock line="87">
          <description><![CDATA[Desativa a opção de debug.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="108" package="api\db">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="94">
          <description><![CDATA[Inicializa os dados da tabela atual (nome da tabela, nome e atributos
de cada coluna, campo(s) de chave primária).]]></description>
          <long-description><![CDATA[<p>O nome da tabela deve seguir as regras do DB
(prefixo + caixa alta + underline como separador de nome composto).
Os atributos de cada coluna são guardados na variável string[] $arrCols, onde o
índice é associativo (nome da coluna) e seu valor é uma string formada pelos
seus respectivos atributos separados por barra normal (/), seguindoo formato
($colName/$type/$null/$key/$extra).</p>]]></long-description>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="141" package="api\db">
        <name>loadColumns</name>
        <full_name>loadColumns</full_name>
        <docblock line="134">
          <description><![CDATA[Faz a leitura das colunas da tabela atual.]]></description>
          <long-description><![CDATA[<p>Após a primeira leitura guarda em cache para reutilização na sessão do usuário.</p>]]></long-description>
          <tag line="134" name="return" description="Array multidimensional com dados de cada coluna da tabela." type="mixed[]">
            <type by_reference="false">mixed[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="163" package="api\db">
        <name>getAlias</name>
        <full_name>getAlias</full_name>
        <docblock line="156">
          <description><![CDATA[Retorna o alias da tabela.]]></description>
          <long-description><![CDATA[<p>Método auxiliar de setJoin().</p>

<p>Caso o atributo $alias não esteja definido, retorna o nome da tabela.</p>]]></long-description>
          <tag line="156" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="app\sys\db" line="175" package="api\db">
        <name>getClassItem</name>
        <full_name>getClassItem</full_name>
        <docblock line="170">
          <description><![CDATA[Retorna o nome da classe atual sem seu namespace.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="201" package="api\db">
        <name>exec</name>
        <full_name>exec</full_name>
        <docblock line="182">
          <description><![CDATA[Método responsável por centralizar e executar todas as ações SQL]]></description>
          <long-description><![CDATA[<p>Utiliza a biblioteca meekrodb ({@link http://www.meekrodb.com}).</p>

<p>SELECT : retorna um mixed[] multidimensional.
INSERT | INSERT_UPDATE: retorna um int com o ID do registro cadastrado/alterado.
DELETE: void
FIRST_ROW: mixed Retorna o valor de uma coluna (int | string | float etc).
FIRST_FIELD: mixed[] Retorna um array associativo unidimensional com as colunas de um único registro.*</p>]]></long-description>
          <tag line="182" name="param" description="indica qual ação deve ser executada. Valores possíveis: SELECT | INSERT | UPDATE | DELETE | FIRST_ROW | FIRST_FIELD | INSERT_UPDATE" type="string" variable="$stmt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="Opcional. Array com os argumentos esperados na ação solicitada." type="string[]" variable="$args">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="182" name="return" description="O método retorna um tipo específico de acordo com a ação solicitada:" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="182" name="throws" description="[ARGS_NULL] Se argumentos informados forem inválidos para a ação solicitada (parâmetro $stmt)." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$stmt</name>
          <default><![CDATA['SELECT']]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$args</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\db" line="315" package="api\db">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="295">
          <description><![CDATA[Executa uma string sql e retorna um array contendo os registros encontrados.]]></description>
          <long-description><![CDATA[<p>Exemplo - retorna os 10 primeiros registros da tabela SPRO_CLIENTE:</p>

<pre><code> $sql        = "SELECT NOME,EMAIL FROM SPRO_CLIENTE LIMIT 10";
 $results    = ORM::query($sql);
 if ($results !== FALSE) {
     foreach($results as $row){
        echo $row['EMAIL'].'<BR>';//Imprime o campo EMAIL de cada registro
     }
 }
</code></pre>]]></long-description>
          <tag line="295" name="param" description="Obrigatório." type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="return" description="| FALSE &lt;br&gt; Retorna um array bidimensional com os registros encontrados, ou FALSE caso nenhum registro tenha sido localizado." type="mixed[]">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="295" name="throws" description="[SQL_NULL] Caso o parâmetro $sql seja nulo ou vazio." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="343" package="api\db">
        <name>setOrderBy</name>
        <full_name>setOrderBy</full_name>
        <docblock line="327">
          <description><![CDATA[Define uma cláusula ORDER BY na consulta.]]></description>
          <long-description><![CDATA[<p>Este método deve ser utilizado apenas com findAll() ou setJoin()</p>

<p>Exemplo:</p>

<pre><code>$obj    = new Cliente();
$obj->setOrderBy('DATA_REGISTRO DESC');
$results = $obj->findAll('ID_INDICA_AMIGO <= 20');//Retorna cada registro como objeto da classe
...
</code></pre>]]></long-description>
          <tag line="327" name="param" description="" type="string" variable="$orderBy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$orderBy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="382" package="api\db">
        <name>setLimit</name>
        <full_name>setLimit</full_name>
        <docblock line="352">
          <description><![CDATA[Define o limite de registros de uma consulta.]]></description>
          <long-description><![CDATA[<p>Exemplo 1:<br>
Retorna os primeiros 20 registros da tabela SPRO_CLIENTE (classe Cliente.php)
ordenados por data de registro descrescente (DATA_REGISTRO DESC) e que
sejam Pessoa Jurídica (PJ).</p>

<pre><code>$obj = new Cliente();
$obj->setLimit(20);//Deve retornar os primeiros 20 regsitros
$obj->setOrderBy('DATA_REGISTRO DESC');//Ordem descendente de data
$results = $obj->findAll(PF_PJ = 'PJ');//Apenas registros 'PJ'
if (is_array($results)){
   foreach($results as $var=>$objCliente){
        ...
   }
}
</code></pre>

<p>Exemplo 2:<br>
Retorna dados iniciando na posição 50 até 100.</p>

<pre><code>$obj = new Cliente();
$obj->setLimit(100,50);//Deve retornar 50 registros iniciando na posição 50.
</code></pre>]]></long-description>
          <tag line="352" name="param" description="Posição final" type="integer" variable="$posFim">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="352" name="param" description="Posição inicial" type="integer" variable="$posIni">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="352" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="382">
          <name>$posFim</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="382">
          <name>$posIni</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="397" package="api\db">
        <name>concatOrderByLimit</name>
        <full_name>concatOrderByLimit</full_name>
        <docblock line="387">
          <description><![CDATA[Concatena as propriedades $orderBy e $limit à string $sql informada.]]></description>
          <long-description><![CDATA[<p>Estas propriedades são opcionais. Por isso, caso não tenham sido definidas
a string retornada é a mesma passada no parâmetro $sql;</p>]]></long-description>
          <tag line="387" name="param" description="Obrigatório. A string sql que deverá ser completada com $orderBy e $limit" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="387" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="397">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="440" package="api\db">
        <name>findAll</name>
        <full_name>findAll</full_name>
        <docblock line="408">
          <description><![CDATA[Faz o SELECT na tabela atual e retorna um array de objetos.]]></description>
          <long-description><![CDATA[<p>O exemplo abaixo imprime o campo EMAIL de cada registro da tabela Cliente.
Note que cada registro é um objeto da classe Cliente:</p>

<p>Exemplo 1 - sem uso de parâmetros:</p>

<pre><code>$objCliente = new Cliente();
$results    = $objCliente->findAll(); // Retorna todos os registros da tabela.
foreach($results as $obj){
     echo $obj->EMAIL;//Objetos da classe Cliente
}
</code></pre>

<p>Exemplo 2 - Com uso de parâmetros.<br>
Neste exemplo vamos localizar todos
os registros Pessoa Física(PF) e que contenham 'Maria' no nome:</p>

<pre><code>$objCliente  = new Cliente();
$where       = "(PF_PJ='PF' AND NOME LIKE '%Maria%')";
$results     = $objCliente->findAll($where);
foreach($results as $obj){
     echo $obj->EMAIL;//Objetos da classe Cliente
}
</code></pre>]]></long-description>
          <tag line="408" name="param" description="Opcional. Pode conter uma cláusula WHERE (ex: CAMPO1 = VALOR1 AND CAMPO2 = VALOR2)" type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="408" name="return" description="Retorna FALSE caso a operação não tenha sido executada com sucesso, ou então retorna um array de objetos da classe atual." type="object[]|FALSE">
            <type by_reference="false">object[]</type>
            <type by_reference="false">FALSE</type>
          </tag>
        </docblock>
        <argument line="440">
          <name>$where</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="462" package="api\db">
        <name>getObj</name>
        <full_name>getObj</full_name>
        <docblock line="455">
          <description><![CDATA[Recebe os dados de um registro ($row) e
converte em um objeto da classe atual (entidade de uma tabela).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="455" name="param" description="Obrigatório." type="mixed[]" variable="$row">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="455" name="return" description="| FALSE Retorna um objeto da classe atual, ou FALSE caso o parâmetro não seja um array." type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
        <argument line="462">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="495" package="api\db">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="477">
          <description><![CDATA[Conta o total de registros encontrados após uma operação de SELECT.]]></description>
          <long-description><![CDATA[<p>Exemplo:</p>

<pre><code> $objCliente = new Cliente();

 //Retorna todos os registros PF da tabela cliente:
 $results    = $objCliente->findAll("PF_PJ = 'PF'");

 //Imprime o total de registros encontrados:
 echo $objCliente->count();
</code></pre>

<p>Por exemplo, após chamar o método $obj->findAll() é possível saber quantos
registros foram retornados executando o método $obj->count().</p>]]></long-description>
          <tag line="477" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="531" package="api\db">
        <name>findAutoNum</name>
        <full_name>findAutoNum</full_name>
        <docblock line="501">
          <description><![CDATA[Localiza um registro a partir de seu campo AUTO_NUMBER.]]></description>
          <long-description><![CDATA[<p>Exemplo 1:</p>

<pre><code>//Localiza um registro pelo seu ID (campo autoNumber):
 $objCliente = new Cliente();
 $row        = $objCliente->findAutoNum(20);

 if ($row !== false) {
     print_r($row);//Campos do registro localizado.
 } else {
     echo 'Nenhum registro foi localizado';
 }
</code></pre>

<p>Exemplo 2:<br>
Ao iniciar um objeto (new...) fornecendo um ID de registro válido o método findAutoNum() é
automaticamente chamado.</p>

<pre><code> $objCliente = new Cliente(10);//Carrega o registro cujo ID na tabela é 10.
 echo $objCliente->EMAIL;//Imprime o campo EMAIL do registro atual.
</code></pre>]]></long-description>
          <tag line="501" name="param" description="Obrigatório. ID do registro a ser localizado pelo seu campo AutoNumber." type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="501" name="return" description="| mixed[] Retorna um array unidimensional associativo com os dados do registro. Se não localizar o registro retorna FALSE." type="FALSE">
            <type by_reference="false">FALSE</type>
          </tag>
          <tag line="501" name="throws" description="[ID_ZERO] Caso o parâmetro $id seja zero ou não numérico." type="\Execption">
            <type by_reference="false">\Execption</type>
          </tag>
          <tag line="501" name="throws" description="[ID_NOT_EXISTS] Caso não encontre o registro do ID informado." type="\Execption">
            <type by_reference="false">\Execption</type>
          </tag>
        </docblock>
        <argument line="531">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="571" package="api\db">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="554">
          <description><![CDATA[A partir do nome da classe atual monta o nome da tabela (entidade do DB) a que faz referência.]]></description>
          <long-description><![CDATA[<p>Por exemplo, a classe Cliente.php representa a tabela SPRO_CLIENTE, CreditoConsolidado
representa a tabela SPRO_CREDITO_CONSOLIDADO.</p>

<p>Código de exemplo:</p>

<pre><code> $objCreditoConsolidado = new CreditoConsolidado();

//A linha abaixo imprime SPRO_CREDITO_CONSOLIDADO:
 echo $objCreditoConsolidado->getTable();
</code></pre>]]></long-description>
          <tag line="554" name="return" description="Retorna o nome da tabela com a mesma grafia do DB." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="625" package="api\db">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="584">
          <description><![CDATA[Faz a exclusão do registro atual.]]></description>
          <long-description><![CDATA[<p>Caso o objeto contenha uma coleção de registros, é possível filtrar
a coleção para excluí-los de uma só vez (exclusão em lote).</p>

<p>Exemplo 1 - Localizar/excluir um registro pelo seu ID:</p>

<pre><code> $objCliente = new Cliente();
 $objCliente->findAutoNum(10);
 if ($objCliente->delete() !== FALSE){
      echo 'Registro excluído com sucesso.';
 } else {
     echo 'Impossível excluir. Registro não encontrado.';
 }
</code></pre>

<p>Exemplo 2 - Localizar/excluir um grupo de registros:</p>

<pre><code>$objCliente  = new Cliente();
$arrWhere    = array("PF_PJ=%s AND NEWSLETTER=%i",'PF',1);
$numDel      = $objCliente->delete($arrWhere);
if ($numDel !== FALSE) {
     echo $numDel. ' registro(s) excluído(s) com sucesso.';
} else {
     echo 'Nenhum registro foi excluído.';
}
</code></pre>]]></long-description>
          <tag line="584" name="param" description="Opcional. &lt;p&gt;Exemplo: $arrWhere = array('PF_PJ=%s AND NEWSLETTER=%i','PF',1). Observe que o primeiro índice (índice zero) do array contém a string da cláusula WHERE com variáveis que indicam o tipo de registro (%i = integer, %s = string, %d = decimal/double, %ss = usar com LIKE etc) e os demais índices contém as respectivas variáveis na ordem em que foram citadas no índice zero. &lt;/p&gt;" type="string[]" variable="$arrWhere">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="584" name="return" description="| integer &lt;p&gt;Retorna FALSE caso o objeto seja nulo ou vazio. Pode ocorrer após usar o método findAutoNum() e não localizar nenhum registro. Ou então, retorna o total de registros excluídos.&lt;/p&gt;" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="625">
          <name>$arrWhere</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="652" package="api\db">
        <name>insertUpdate</name>
        <full_name>insertUpdate</full_name>
        <docblock line="641">
          <description><![CDATA[Método auxliar de save().]]></description>
          <long-description><![CDATA[<p>Executa a operação de INSERT/UPDATE com os dados do objeto atual.</p>

<p>Caso já exista um registro com a mesma chave primária faz UPDATE.
Caso contrário faz INSERT.</p>]]></long-description>
          <tag line="641" name="return" description="Retorna o ID (autoNumber) do registro cadastrado/alterado, ou então retorna zero caso nenhuma modificação tenha ocorrido." type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="641" name="throws" description="[PARAMS_NULL] Caso o objeto atual não tenha parâmetros/atributos definidos." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="675" package="api\db">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="665">
          <description><![CDATA[Método auxliar de save().]]></description>
          <long-description><![CDATA[<p>Faz o INSERT do registro atual.</p>]]></long-description>
          <tag line="665" name="return" description="Retorna o ID (autoNumber) do novo registro cadastrado." type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="665" name="throws" description="[PARAMS_NULL] Caso o objeto atual esteja vazio (sem dados de um registro válido)." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="665" name="throws" description="[UNIQUE_FIELD_NULL] Caso um campo único obrigatório não tenha sido definido." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="665" name="throws" description="[PK_CONFLICT] Caso exista conflito com um campo único." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="732" package="api\db">
        <name>updateForId</name>
        <full_name>updateForId</full_name>
        <docblock line="724">
          <description><![CDATA[Faz o UPDATE do registro atual a partir do ID (autoNumber) informado na chamada do método.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="724" name="param" description="Obrigatório. ID do registro a ser alterado." type="integer" variable="$id">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="724" name="return" description="Retorna 1 se alguma alteração ocorreu, ou zero caso nenhuma alteração tenha ocorrido." type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="724" name="throws" description="[PARAMS_NULL] Caso o parâmetro $id seja &gt; 0 e o objeto atual esteja vazio (sem dados de um registro válido)." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="724" name="throws" description="[ID_ZERO] Caso o parâmetro $id seja = 0 ou inválido." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="732">
          <name>$id</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="779" package="api\db">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="749">
          <description><![CDATA[Faz o UPDATE de um registro ou de um grupo de registros.]]></description>
          <long-description><![CDATA[<p>Exemplo1:<br>
Mostra a atualização do campo CIDADE para todos os registros 'PF'.</p>

<pre><code>$objCliente  = new Cliente();
$obj->CIDADE = 'São Paulo';
$arrWhere    = array('PF_PJ=%s','PF');
$id          = $obj->update($arrWhere);

if ($id > 0) die("Gravou/atualizou o registro {$id}.");
echo 'Nada foi feito.';
</code></pre>

<p>Exemplo 2:<br>
Mostra a atualização de um único registro.</p>

<pre><code>$objCliente  = new Cliente();
</code></pre>]]></long-description>
          <tag line="749" name="param" description="Opcional. &lt;br&gt; Exemplo: $arrWhere = array('PF_PJ=%s AND NEWSLETTER=%i','PF',1). Observe que o primeiro índice (índice zero) do array contém a string da cláusula WHERE com variáveis que indicam o tipo de registro (%i = integer, %s = string, %d = decimal/double, %ss = usar com LIKE etc) e os demais índices contém as respectivas variáveis na ordem em que foram citadas no índice zero." type="string[]" variable="$arrWhere">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="749" name="return" description="Retorna o total de linhas afetadas." type="\app\sys\db\$integer">
            <type by_reference="false">\app\sys\db\$integer</type>
          </tag>
          <tag line="749" name="throws" description="[WHERE_NULL] Caso o parâmetro $arrWhere seja NULL ou inválido." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="779">
          <name>$arrWhere</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="812" package="api\db">
        <name>filterByAnd</name>
        <full_name>filterByAnd</full_name>
        <docblock line="789">
          <description><![CDATA[Monta uma string WHERE com o operador AND.]]></description>
          <long-description><![CDATA[<p>Recebe um array associativo no formato $arr['NOME_DO_CAMPO'] = VALOR e
retorna uma string WHERE com o operador AND.</p>

<p>Exemplo:</p>

<pre><code> $arrFilterBy['NOME']    = 'João';
 $arrFilterBy['EMAIL']   = 'joao@server.com';
 $arrFilterBy['ID_UF']   = '1';

$obj                     = new Cliente();
$where                   = $obj->filterByAnd($arrFilterBy);

echo $where;
//Saída: NOME='João' AND EMAIL='joao@server.com AND ID_UF=1

</code></pre>]]></long-description>
          <tag line="789" name="param" description="Obrigatório." type="string[]" variable="$arrFilterBy">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="789" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="812">
          <name>$arrFilterBy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="825" package="api\db">
        <name>filterByOr</name>
        <full_name>filterByOr</full_name>
        <docblock line="816">
          <description><![CDATA[Monta uma string WHERE com o operador OR.]]></description>
          <long-description><![CDATA[<p>Recebe um array associativo no formato $arr['NOME_DO_CAMPO'] = VALOR e
retorna uma string WHERE com o operador OR.</p>]]></long-description>
          <tag line="816" name="param" description="Obrigatório." type="string[]" variable="$arrFilterBy">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="816" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="825">
          <name>$arrFilterBy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="847" package="api\db">
        <name>filterBy</name>
        <full_name>filterBy</full_name>
        <docblock line="829">
          <description><![CDATA[Recebe um array associativo no formato $arr['COL_NAME']=VALUE e retorna
uma string para ser usada na cláusula WHERE de acordo com o operador AND/OR
informado (parâmetro $andOr).]]></description>
          <long-description><![CDATA[<p>A partir do índice associativo do array $arrFilterBy o tipo de cada campo é confrontado
com o tipo definido no DB para formar uma string com o devido tratamento ({@see setWhere()}).</p>

<p>Exemplo:
Para o campo NOME do tipo string o $param informado para o objeto $where ficará NOME=%s.
Para o campo IDADE do tipo int o $param informado para o objeto $where ficará IDADE=%i.</p>]]></long-description>
          <tag line="829" name="param" description="" type="string[]" variable="$arrFilterBy">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="829" name="param" description="Define o tipo de filtro solicitado. Valores possíveis: AND|OR" type="string" variable="$andOr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="829" name="return" description="Retorna a string pronta que será concatenada com o WHERE." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="829" name="throws" description="[PARAMS_NULL] Caso um dos parâmetros ($arrFilterBy ou $andOr) seja NULL ou inválido." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="829" name="throws" description="[ERR_AND_OR] Caso o parâmetro $andOr possua valor diferente de 'AND' ou 'OR'." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="847">
          <name>$arrFilterBy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="847">
          <name>$andOr</name>
          <default><![CDATA['and']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="876" package="api\db">
        <name>loadTables</name>
        <full_name>loadTables</full_name>
        <docblock line="871">
          <description><![CDATA[Gera uma lista das tabelas do DB atual.]]></description>
          <long-description><![CDATA[<p>return string[] Retorna um array unidimensional com as tabelas do DB atual.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="920" package="api\db">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="882">
          <description><![CDATA[Faz o INSERT (novo registro) ou UPDATE (caso encontre conflito com campo único) do registro atual.]]></description>
          <long-description><![CDATA[<p>IMPORTANTE: este método deve ser usado apenas para autalização/gravação de um único registro.
Para fazer atualizações em lote utilize o método <b>update()</b> com parâmetro WHERE.&lt;br/></p>

<p>Exemplo 1 - alterar o campo PF_PJ de um registro cujo ID (autoNumber) é igual a 10:</p>

<pre><code>$obj = new Cliente(10);//Localiza o registro cujo ID = 10
$obj->PF_PJ = 'PJ';//Altera este campo para PJ
$id = $obj->save();

if ($id > 0){
  echo 'Alteração realizada com sucesso.';
} else {
  echo 'Nada foi alterado.';
}
</code></pre>

<p>Exemplo 2 - Novo registro para inclusão:</p>

<pre><code>$obj = new Cliente();
$obj->LOGIN             = 'admin';
$obj->NOME_PRINCIPAL    = 'João Silva';
$obj->EMAIL             = "joao@server.com";
$obj->PF_PJ             = 'PF';
$id                     = $obj->save();

if ($id > 0){
  echo 'Inclusão/alteraçaõ realizada com sucesso.';
} else {
  echo 'Nada foi feito.';
}
</code></pre>]]></long-description>
          <tag line="882" name="return" description="&lt;br&gt; Retorna o ID do registro gravado/alterado. Para a ação de UPDATE, se não houver alteração retorna zero." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="949" package="api\db">
        <name>setWhere</name>
        <full_name>setWhere</full_name>
        <docblock line="936">
          <description><![CDATA[Recebe o nome de uma coluna da tabela e gera uma string no formato COL_NAME=%type,
onde type pode ser %i,%s,%d, %ls, %li, %ld, necessária para fazer consultas no mySql.]]></description>
          <long-description><![CDATA[<p>O tipo da coluna é confrontado com o formato definido na tabela do DB ($arrCols).
Exemplo: para o formato string o tipo será '%s' e para o formato integer o tipo será '%i'.</p>

<p>Para conhecer melhor os tipos permitidos, consulte o site {@link http://meekrodb.com}.
          *</p>]]></long-description>
          <tag line="936" name="param" description="Obrigatório. Nome da coluna (deve existir no DB)" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="return" description="Retorna a string com o nome da coluna + código Sql. Exemplo: NOME=%s" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="936" name="throws" description="[COL_NAME_NOT_EXISTS] Caso os campos da tabela atual não tenham sido carregados corretamente." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="949">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\db" line="1031" package="api\db">
        <name>joinFrom</name>
        <full_name>joinFrom</full_name>
        <docblock line="982">
          <description><![CDATA[Faz um JOIN padrão entre duas tabelas.]]></description>
          <long-description><![CDATA[<p>Exemplo - método criado dentro da classe Cliente:</p>

<pre><code>class Cliente {
     ...

     function joinUf(){
         //Objeto referente à tabela A:
         $objA           = $this;
         $objA->alias    = 'a';

         //Objeto referente à tabela B:
         $objB           = new Uf();
         $objB->alias    = 'b';

         //Array com campo(s) usado(s) para fazer o JOIN:
         $arrFields      = 'ID_UF';
         $a = $this->joinFrom($objA,$objB,$arrFields,'INNER');

         //Método alternativo:
         //$a = $this->innerJoinFrom($objA,$objB,$arrFields);

         //Finalização do JOIN passando um parâmetro WHERE (opcional):
         $this->setJoin("b.UF='SP'");

         //Executará a string SQL abaixo:
         //SELECT a.*,b.* FROM SPRO_CLIENTE a INNER JOIN SPRO_UF b ON a.ID_UF = b.ID_UF AND b.UF='SP'
     }
}

//Chamada do método que faz o JOIN entre Cliente e Uf:
 $objCliente = new Cliente();
 $results    = $objCliente->joinUf();//Retorna um array de objetos da classe Cliente.

//Ou então...
$objCliente  = new Cliente();
$objCliente->joinUf();
$results     = $objCliente->load();//Retorna o array de objetos gerado ao chamar o método joinUf();
</code></pre>]]></long-description>
          <tag line="982" name="param" description="Obrigatório. Objeto referente à tabela A" type="object" variable="$objTableA">
            <type by_reference="false">object</type>
          </tag>
          <tag line="982" name="param" description="Obrigatório. Objeto referente à tabela B" type="object" variable="$objTableB">
            <type by_reference="false">object</type>
          </tag>
          <tag line="982" name="param" description="Obrigatório. Campo usado para fazer o JOIN entre as duas tabelas." type="string" variable="$fieldMap">
            <type by_reference="false">string</type>
          </tag>
          <tag line="982" name="param" description="Opcional. Se não informado o padrão é 'INNER'. Valores possíveis:INNER | OUTER | LEFT | RIGHT." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="982" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="982" name="throws" description="[ERR_MAP_FIELDS] Caso o parâmetro $fieldMap não está no formato correto." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="982" name="throws" description="[ERR_JOIN_PARAM] Caso um ou mais parâmetros obrigatórios sejam inválidos ou incorretos." type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="1031">
          <name>$objTableA</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1031">
          <name>$objTableB</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1031">
          <name>$fieldMap</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1031">
          <name>$type</name>
          <default><![CDATA['INNER']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\db" line="1076" package="api\db">
        <name>innerJoinFrom</name>
        <full_name>innerJoinFrom</full_name>
        <docblock line="1069">
          <description><![CDATA[Alternativa para chamar o método joinFrom() para criar 'INNER JOIN'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1069" name="param" description="Obrigatório." type="object" variable="$objTableA.">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1069" name="param" description="Obrigatório." type="object" variable="$objTableB.">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1069" name="param" description="Obrigatório." type="string" variable="$fieldMap.">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1076">
          <name>$objTableA</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1076">
          <name>$objTableB</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1076">
          <name>$fieldMap</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\db" line="1087" package="api\db">
        <name>outerJoinFrom</name>
        <full_name>outerJoinFrom</full_name>
        <docblock line="1080">
          <description><![CDATA[Alternativa para chamar o método joinFrom() para criar 'OUTER JOIN'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1080" name="param" description="Obrigatório." type="object" variable="$objTableA.">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1080" name="param" description="Obrigatório." type="object" variable="$objTableB.">
            <type by_reference="false">object</type>
          </tag>
          <tag line="1080" name="param" description="Obrigatório." type="string" variable="$fieldMap.">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1087">
          <name>$objTableA</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1087">
          <name>$objTableB</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1087">
          <name>$fieldMap</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\db" line="1099" package="api\db">
        <name>joinFromAdd</name>
        <full_name>joinFromAdd</full_name>
        <docblock line="1092">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1092" name="param" description="" type="\app\sys\db\type" variable="$objTableA">
            <type by_reference="false">\app\sys\db\type</type>
          </tag>
          <tag line="1092" name="param" description="" type="\app\sys\db\type" variable="$objTableB">
            <type by_reference="false">\app\sys\db\type</type>
          </tag>
          <tag line="1092" name="param" description="" type="\app\sys\db\type" variable="$fieldMap">
            <type by_reference="false">\app\sys\db\type</type>
          </tag>
          <tag line="1092" name="param" description="" type="\app\sys\db\type" variable="$type">
            <type by_reference="false">\app\sys\db\type</type>
          </tag>
        </docblock>
        <argument line="1099">
          <name>$objTableA</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$objTableB</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$fieldMap</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1099">
          <name>$type</name>
          <default><![CDATA['INNER']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\db" line="1112" package="api\db">
        <name>setJoin</name>
        <full_name>setJoin</full_name>
        <argument line="1112">
          <name>$where</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\db" line="1148" package="api\db">
        <name>setFormatRow</name>
        <full_name>setFormatRow</full_name>
        <docblock line="1141">
          <description><![CDATA[Método auxiliar de toJson(), toArray() e toString.]]></description>
          <long-description><![CDATA[<p>Converte os dados do objeto atual no formato solicitado (ARRAY | JSON | STRING).</p>]]></long-description>
          <tag line="1141" name="param" description="Valores possíveis: ARRAY | JSON | STRING." type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1141" name="return" description="| mixed[] | string" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="1148">
          <name>$format</name>
          <default><![CDATA['ARRAY']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="1171" package="api\db">
        <name>toJson</name>
        <full_name>toJson</full_name>
        <docblock line="1167">
          <description><![CDATA[Retorna os dados do objeto atual no formato JSON.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1167" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="1179" package="api\db">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="1175">
          <description><![CDATA[Retorna os dados do objeto atual no formato ARRAY]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1175" name="return" description="" type="mixed[]">
            <type by_reference="false">mixed[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="1187" package="api\db">
        <name>toString</name>
        <full_name>toString</full_name>
        <docblock line="1183">
          <description><![CDATA[Retorna os dados do objeto atual no formato STRING.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1183" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="1194" package="api\db">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="1191">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1191" name="ignore" description=""/>
        </docblock>
        <argument line="1194">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1194">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\db" line="1227" package="api\db">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="1224">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1224" name="ignore" description=""/>
        </docblock>
        <argument line="1227">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\db\ORM.php</error>
      <error line="40" code="50018">No DocBlock was found for property $prefixoTable</error>
      <error line="41" code="50018">No DocBlock was found for property $arrKey</error>
      <error line="42" code="50018">No DocBlock was found for property $arrUnique</error>
      <error line="43" code="50018">No DocBlock was found for property $colAutoNum</error>
      <error line="44" code="50018">No DocBlock was found for property $tableName</error>
      <error line="45" code="50018">No DocBlock was found for property $arrCols</error>
      <error line="46" code="50018">No DocBlock was found for property $arrParams</error>
      <error line="47" code="50018">No DocBlock was found for property $id</error>
      <error line="48" code="50018">No DocBlock was found for property $row</error>
      <error line="49" code="50018">No DocBlock was found for property $where</error>
      <error line="50" code="50018">No DocBlock was found for property $alias</error>
      <error line="51" code="50018">No DocBlock was found for property $orderBy</error>
      <error line="52" code="50018">No DocBlock was found for property $limit</error>
      <error line="53" code="50018">No DocBlock was found for property $results</error>
      <error line="54" code="50018">No DocBlock was found for property $joinWhere</error>
      <error line="55" code="50018">No DocBlock was found for property $arrObjJoin</error>
      <error line="56" code="50018">No DocBlock was found for property $fieldsJoin</error>
      <error line="57" code="50018">No DocBlock was found for property $debug</error>
      <error line="1069" code="50014">Name of argument $objTableA does not match with the DocBlock's name $objTableA. in innerJoinFrom()</error>
      <error line="1069" code="50014">Name of argument $objTableB does not match with the DocBlock's name $objTableB. in innerJoinFrom()</error>
      <error line="1069" code="50014">Name of argument $fieldMap does not match with the DocBlock's name $fieldMap. in innerJoinFrom()</error>
      <notice line="1069" code="50013">Parameter $objTableA. could not be found in innerJoinFrom()</notice>
      <notice line="1069" code="50013">Parameter $objTableB. could not be found in innerJoinFrom()</notice>
      <notice line="1069" code="50013">Parameter $fieldMap. could not be found in innerJoinFrom()</notice>
      <error line="1080" code="50014">Name of argument $objTableA does not match with the DocBlock's name $objTableA. in outerJoinFrom()</error>
      <error line="1080" code="50014">Name of argument $objTableB does not match with the DocBlock's name $objTableB. in outerJoinFrom()</error>
      <error line="1080" code="50014">Name of argument $fieldMap does not match with the DocBlock's name $fieldMap. in outerJoinFrom()</error>
      <notice line="1080" code="50013">Parameter $objTableA. could not be found in outerJoinFrom()</notice>
      <notice line="1080" code="50013">Parameter $objTableB. could not be found in outerJoinFrom()</notice>
      <notice line="1080" code="50013">Parameter $fieldMap. could not be found in outerJoinFrom()</notice>
      <error line="1092" code="50012">No short description for method joinFromAdd()</error>
      <error line="1112" code="50010">No DocBlock was found for method setJoin()</error>
    </parse_markers>
  </file>
  <file path="app\sys\mvc\controller.php" hash="de5602b5f3a708a78fff3a25ac96ac96" package="Default">
    <class final="false" abstract="false" namespace="app\sys\mvc" line="9" package="Default">
      <extends/>
      <name>Controller</name>
      <full_name>\app\sys\mvc\Controller</full_name>
      <property final="false" static="false" visibility="private" line="11" namespace="app\sys\mvc" package="Default">
        <name>$templateFile</name>
        <default><![CDATA['padrao']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="app\sys\mvc" line="14" package="Default">
        <name>checkUrlFile</name>
        <full_name>checkUrlFile</full_name>
        <argument line="14">
          <name>$urlFile</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\mvc" line="18" package="Default">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <argument line="18">
          <name>$tpl</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="app\sys\mvc" line="40" package="Default">
        <name>view</name>
        <full_name>view</full_name>
        <argument line="40">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$objParams</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\mvc\controller.php</error>
      <error line="9" code="50000">No DocBlock was found for \app\sys\mvc\Controller</error>
      <error line="11" code="50018">No DocBlock was found for property $templateFile</error>
      <error line="14" code="50010">No DocBlock was found for method checkUrlFile()</error>
      <error line="18" code="50010">No DocBlock was found for method setTemplate()</error>
      <error line="40" code="50010">No DocBlock was found for method view()</error>
    </parse_markers>
  </file>
  <file path="app\sys\mvc\model.php" hash="689370ef0b81388e948c0526d7480b43" package="Default">
    <class final="false" abstract="false" namespace="app\sys\mvc" line="9" package="Default">
      <extends/>
      <name>Model</name>
      <full_name>\app\sys\mvc\Model</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\mvc" line="11" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\mvc" line="17" package="Default">
        <name>sql</name>
        <full_name>sql</full_name>
        <argument line="17">
          <name>$em</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="17">
          <name>$dql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\mvc" line="22" package="Default">
        <name>tb</name>
        <full_name>tb</full_name>
        <argument line="22">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\mvc" line="28" package="Default">
        <name>getEntity</name>
        <full_name>getEntity</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\mvc\model.php</error>
      <error line="9" code="50000">No DocBlock was found for \app\sys\mvc\Model</error>
      <error line="11" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50010">No DocBlock was found for method sql()</error>
      <error line="22" code="50010">No DocBlock was found for method tb()</error>
      <error line="28" code="50010">No DocBlock was found for method getEntity()</error>
    </parse_markers>
  </file>
  <file path="app\sys\plugins\plugin.php" hash="8babcbc006cdc1e12d47bf613c940328" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends/>
      <name>Plugin</name>
      <full_name>\Plugin</full_name>
      <docblock line="2">
        <description><![CDATA[Classe que permite executar recursos de back-end por meio de plugins de terceiros.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="author" description="Supervip"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="18" package="Default">
        <name>yuiCompressor</name>
        <full_name>yuiCompressor</full_name>
        <docblock line="9">
          <description><![CDATA[Recebe a url de um arquivo js ou css, faz a compactação
e grava novo arquivo na pasta de destino, usando o sufixo_min no final]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="9" name="param" description="(string contendo o script a ser comprimido)" type="String" variable="$strScript">
            <type by_reference="false">String</type>
          </tag>
          <tag line="9" name="param" description="(formato de saída do script. Pode ser js ou css)" type="String" variable="$formato">
            <type by_reference="false">String</type>
          </tag>
          <tag line="9" name="return" description="$out" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="18">
          <name>$strScript</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="18">
          <name>$formato</name>
          <default><![CDATA['js']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\plugins\plugin.php</error>
    </parse_markers>
  </file>
  <file path="app\sys\util\Cache.php" hash="628aeef4106c903ed6a8e5dba397c5dd" package="Default">
    <class final="false" abstract="false" namespace="app\sys\util" line="9" package="Default">
      <extends/>
      <name>Cache</name>
      <full_name>\app\sys\util\Cache</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="11" package="Default">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="17" package="Default">
        <name>getVarMemCache</name>
        <full_name>getVarMemCache</full_name>
        <argument line="17">
          <name>$varCache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="22" package="Default">
        <name>setVarMemCache</name>
        <full_name>setVarMemCache</full_name>
        <argument line="22">
          <name>$varCache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="22">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\util\Cache.php</error>
      <error line="9" code="50000">No DocBlock was found for \app\sys\util\Cache</error>
      <error line="11" code="50010">No DocBlock was found for method init()</error>
      <error line="17" code="50010">No DocBlock was found for method getVarMemCache()</error>
      <error line="22" code="50010">No DocBlock was found for method setVarMemCache()</error>
    </parse_markers>
  </file>
  <file path="app\sys\util\Dic.php" hash="9d751f3e2163a80e184dc116b6c019f5" package="Default">
    <class final="false" abstract="false" namespace="app\sys\util" line="10" package="Default">
      <extends/>
      <name>Dic</name>
      <full_name>\app\sys\util\Dic</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="21" package="Default">
        <name>getNameItem</name>
        <full_name>getNameItem</full_name>
        <docblock line="12">
          <description><![CDATA[Recebe um nome de classe ou método na variável $item, retira o namespace e retorna
o conteúdo de $item sem o namespace.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="12" name="param" description="Pode ser o nome de uma classe com namespace (Ex:) ou o nome de um método com namespace" type="string" variable="$item">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="param" description="Namespace a ser excluído da variável $item" type="string" variable="$ns">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$item</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="21">
          <name>$ns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="26" package="Default">
        <name>loadMsg</name>
        <full_name>loadMsg</full_name>
        <argument line="26">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$ns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="26">
          <name>$codMsg</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="75" package="Default">
        <name>setErr</name>
        <full_name>setErr</full_name>
        <docblock line="69">
          <description><![CDATA[Mostra um erro de execução originário na classe Dic.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="Nome do método que fez a chamada" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="Mensagem de erro a mostrar na tela" type="\app\sys\util\type" variable="$msgErr">
            <type by_reference="false">\app\sys\util\type</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$msgErr</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\util\Dic.php</error>
      <error line="10" code="50000">No DocBlock was found for \app\sys\util\Dic</error>
      <error line="26" code="50010">No DocBlock was found for method loadMsg()</error>
    </parse_markers>
  </file>
  <file path="app\sys\util\object.php" hash="8c081b9ae3c1b26032c6fcaad6791562" package="Default">
    <class final="false" abstract="false" namespace="app\sys\util" line="8" package="Default">
      <extends/>
      <name>Object</name>
      <full_name>\app\sys\util\Object</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\util" line="9" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\util\object.php</error>
      <error line="8" code="50000">No DocBlock was found for \app\sys\util\Object</error>
      <error line="9" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="app\sys\util\Request.php" hash="398478cd7512b8b393efbbf3980e74c6" package="Default">
    <class final="false" abstract="false" namespace="app\sys\util" line="4" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\app\sys\util\Request</full_name>
      <property final="false" static="false" visibility="public" line="17" namespace="app\sys\util" package="Default">
        <name>$strVars</name>
        <default><![CDATA[]]></default>
        <docblock line="6">
          <description><![CDATA[Classe usada para receber/lêr variáveis via GET, POST, SESSION,
ou então, pode ser instanciada como objeto recebendo uma string
de variáveis (Ex: var1=value1&var2=value2&.]]></description>
          <long-description><![CDATA[<p>..), que são convertidas
em variáveis a partir do método mágico __set().</p>

<p>Exemplo:
$objReq = new Request("nome=João&amp;idade=28");
echo $objReq->nome;</p>]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\util" line="19" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="19">
          <name>$strVars</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\sys\util" line="23" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="23">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="38" package="Default">
        <name>getVar</name>
        <full_name>getVar</full_name>
        <docblock line="30">
          <description><![CDATA[Método que recebe o valor de uma varíavel e seu respectivo tipo]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="param" description="Valor da variável a ser tratada" type="string|\app\sys\util\number|array|object" variable="$varValue">
            <type by_reference="false">string</type>
            <type by_reference="false">\app\sys\util\number</type>
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="30" name="param" description="Valor retornado caso a variável tenha um tipo diferente do esperado" type="string" variable="$defaultValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="Pode ser STRING|NUMBER|OBJECT|ARRAY|SERIAL" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="" type="string|\app\sys\util\number|object">
            <type by_reference="false">string</type>
            <type by_reference="false">\app\sys\util\number</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$varValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$type</name>
          <default><![CDATA['STRING']]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$defaultValue</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="67" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <argument line="67">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$method</name>
          <default><![CDATA['REQUEST']]></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$defaultValue</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="87" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <argument line="87">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$type</name>
          <default><![CDATA['STRING']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="91" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <argument line="91">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$type</name>
          <default><![CDATA['STRING']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="app\sys\util" line="95" package="Default">
        <name>session</name>
        <full_name>session</full_name>
        <argument line="95">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$type</name>
          <default><![CDATA['STRING']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file app\sys\util\Request.php</error>
      <error line="4" code="50000">No DocBlock was found for \app\sys\util\Request</error>
      <error line="19" code="50010">No DocBlock was found for method __construct()</error>
      <error line="23" code="50010">No DocBlock was found for method __get()</error>
      <error line="30" code="50014">Name of argument $type does not match with the DocBlock's name $defaultValue in getVar()</error>
      <error line="30" code="50014">Name of argument $defaultValue does not match with the DocBlock's name $type in getVar()</error>
      <error line="67" code="50010">No DocBlock was found for method all()</error>
      <error line="87" code="50010">No DocBlock was found for method get()</error>
      <error line="91" code="50010">No DocBlock was found for method post()</error>
      <error line="95" code="50010">No DocBlock was found for method session()</error>
    </parse_markers>
  </file>
  <file path="docs\examples\findAll.php" hash="11040bae6f709f1f7b72dc99cab17549" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file docs\examples\findAll.php</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="a44c1de65dc8cf2c712d80c94e4ad95b" package="Default">
    <include line="23" type="Require Once" package="Default">
      <name>app/sys/db/Meekrodb_2_0.php</name>
    </include>
    <include line="24" type="Require Once" package="Default">
      <name>app/sys/db/Conn.php</name>
    </include>
    <include line="25" type="Require Once" package="Default">
      <name>app/sys/mvc/Controller.php</name>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>app/sys/mvc/Model.php</name>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="44" type="Require Once" package="Default">
      <name/>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file index.php</error>
    </parse_markers>
  </file>
  <file path="phpinfo.php" hash="7a17c8ee9f67784f522885955ee2667f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file phpinfo.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="api" full_name="api">
    <package name="db" full_name="api\db"/>
  </package>
  <namespace name="app" full_name="app">
    <namespace name="models" full_name="app\models">
      <namespace name="tables" full_name="app\models\tables"/>
    </namespace>
    <namespace name="sys" full_name="app\sys">
      <namespace name="db" full_name="app\sys\db"/>
      <namespace name="mvc" full_name="app\sys\mvc"/>
      <namespace name="util" full_name="app\sys\util"/>
    </namespace>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
